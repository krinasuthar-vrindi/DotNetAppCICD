trigger:
- main  # Trigger pipeline on push to 'main' branch

pool:
  name: SelfHosted  # Use your self-hosted agent pool

variables:
  buildConfiguration: 'Release'

steps:
# Use .NET 8 SDK (Latest patch version)
- task: UseDotNet@2
  displayName: 'Use .NET 8 SDK'
  inputs:
    version: 8.0.204
    includePreviewVersions: false

# Restore NuGet packages
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    restoreSolution: '**/*.sln'

# Build the project
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '**/*.sln'
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# Run unit tests
- task: VSTest@2
  displayName: 'Run unit tests'
  inputs:
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# Publish the project
- task: DotNetCoreCLI@2
  displayName: 'Publish Application'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

# Deploy to local IIS folder
- task: PowerShell@2
  displayName: 'Deploy to IIS'
  inputs:
    targetType: 'inline'
    script: |
      $source = "$(Build.ArtifactStagingDirectory)"
      $destination = "C:\inetpub\wwwroot\AzureTestApp"
      Copy-Item -Path "$source\*" -Destination $destination -Recurse -Force

# Recycle IIS App Pool with Status Logs
- task: PowerShell@2
  displayName: 'Recycle IIS App Pool with Status Logs'
  inputs:
    targetType: 'inline'
    script: |
      Import-Module WebAdministration
      $appPoolName = "AzureTestApp"

      Write-Host "App Pool Status BEFORE:"
      Get-WebAppPoolState -Name $appPoolName

      Restart-WebAppPool -Name $appPoolName
      Write-Host "App Pool Status AFTER:"
      Get-WebAppPoolState -Name $appPoolName

#For sending email 
- task: PowerShell@2
  displayName: 'Send Email Notification via SMTP'
  inputs:
    targetType: 'inline'
    script: |
      $smtpServer = "smtp.gmail.com"
      $smtpFrom = "vrindi.test12@gmail.com"
      $smtpTo = "krina.suthar@vrindimail.com"
      $subject = "IIS Deployment Status"
      $body = "✅ Deployment completed and IIS App Pool recycled successfully on $(Agent.MachineName)."

      $message = New-Object system.net.mail.mailmessage
      $message.from = $smtpFrom
      $message.To.add($smtpTo)
      $message.Subject = $subject
      $message.Body = $body

      $smtp = New-Object Net.Mail.SmtpClient($smtpServer, 587)
      $smtp.EnableSSL = $true
      $smtp.Credentials = New-Object System.Net.NetworkCredential("vrindi.test12@gmail.com", "onrutnfixnndvsgq")

      $smtp.Send($message)
